import pygame
import math
pygame.init()

#Screen size of device it is coded on: 1920x1080
window = pygame.display.set_mode(pygame.display.get_desktop_sizes()[0])
screen = pygame.display.get_window_size()
clock = pygame.time.Clock()

background = pygame.image.load("background.png").convert_alpha()
#background_scaled = pygame.transform.scale(background, (1280*1.5, 720*1.5))
#background_sand = pygame.transform.scale(background, (1280*4.5, 720*4.5))
current_slice = 0

original_hermie = pygame.image.load("Hermie_Crawling.png").convert_alpha()
resized_hermie = (200, 200)
hermie_crawling1 = pygame.transform.scale(original_hermie, resized_hermie)
hermie_crawling2 = pygame.transform.scale(pygame.image.load("Hermie_Crawling2.png"), (200,200))
hermie_boss1 = pygame.transform.scale(original_hermie, (1000,1000))
hermie_boss2 = pygame.transform.scale(pygame.image.load("Hermie_Crawling2.png"), (1000,1000))
walking_frame = 1
jumping_frame = 0


alcohol = pygame.image.load("alcohol.png").convert_alpha()
alcohol = pygame.transform.scale(alcohol, (20, 70))

#if jumping frame = 0, you're not currently jumping
def jump(current_y,jumping_frame):
    if jumping_frame == 0:
        keys = pygame.key.get_pressed()
        if keys[pygame.K_UP] == 1:
            return current_y, jumping_frame + 1
        else:
            return current_y, jumping_frame
    else:
        #Line below is the jump equation.
        current_y = current_y - (35 - jumping_frame * 2)
        return current_y, jumping_frame + 1

running = True

current_y = screen[1] * 4 / 9
current_x = screen[0]*6.5/14.5
print(current_y)

scroll = 0
tile = math.ceil(screen[0] / background.get_width()) + 1

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
            exit()

    clock.tick(60)
    i = 0
    scroll -= 6
    while(i < tile):
        window.blit(background, (background.get_width()*i + scroll, 0))
        window.blit(alcohol, (background.get_width()*i + scroll, 570))
        i += 1
    if abs(scroll) > background.get_width():
        scroll = 0
    #Optional cropping parameter meaning: Where to crop from the image x. Where to crop from the image y. How long the crop is. How tall the crop.)
    #The five blits below are the water and the shore of the sand
    """
    window.blit(background_scaled, (0, 0), (0, 0, 2040, 390))
    window.blit(background_scaled, (0, 250), (960, 470, 390, 325))
    window.blit(background_scaled, (390, 250), (960, 470, 390, 325))
    window.blit(background_scaled, (780, 250), (960, 470, 390, 325))
    window.blit(background_scaled, (1170, 250), (960, 470, 390, 325))
    window.blit(background_scaled, (1560, 250), (960, 470, 390, 325))

    window.blit(background_sand, (0, 550), (0, 2850, 1920, 900))
    window.blit(background_sand, (0, 700), (0, 2850, 1920, 900))
    """
    if jumping_frame == 35:
        print(current_y)
        jumping_frame = 0
    current_y, jumping_frame = jump(current_y, jumping_frame)
    if walking_frame <= 7:
      window.blit(hermie_crawling1, (current_x, current_y))
      window.blit(hermie_boss1, (0, -370))
      walking_frame += 1
    elif walking_frame > 7 and walking_frame <= 14:
        window.blit(hermie_crawling2, (current_x,current_y))
        window.blit(hermie_boss2, (0, -370))
        walking_frame += 1
    if walking_frame == 14:
        walking_frame = 0
    pygame.display.update()
